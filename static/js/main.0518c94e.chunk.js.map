{"version":3,"sources":["assets/no-img-portrait-text.png","Components/Show/index.js","constants.js","Components/Genre/Index.js","services/index.js","Container/Dashboard/index.js","Container/GenreShows/index.js","Components/InfoCard/index.js","Container/ShowInfo/index.js","App.js","index.js"],"names":["module","exports","Show","image","name","show","Col","xs","sm","md","lg","xl","className","to","pathname","id","src","alt","style","width","BASE_URL","NA","Genre","filteredShows","showList","type","shows","filter","genres","includes","sort","a","b","rating","average","map","medium","dummyImage","key","slice","genrePath","length","Badge","pill","variant","float","Row","fetchAllShows","axios","get","searchShows","value","Dashboard","state","searchValue","error","getGenres","Set","forEach","add","searchApi","then","res","resultArray","data","showData","setState","catch","getAllShows","inputSearch","e","preventDefault","target","submitHandler","this","Container","onSubmit","placeholder","onChange","genre","Component","GenreShows","back","props","location","onBack","match","params","Button","onClick","Spinner","animation","role","InfoCard","schedule","time","days","network","country","join","runtime","href","officialSite","ShowInfo","fetchShow","html","summary","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0518c94e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-img-portrait-text.d6af9c9e.png\";","import React from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nfunction Show({ image, name, show }) {\r\n  return (\r\n    <Col xs={6} sm={4} md={2} lg={2} xl={2} className=\"thumbnail\">\r\n      <Link to={{ pathname: `/show/${show.id}`, show }}>\r\n        <img src={image} alt={name} style={{ width: \"100%\" }} />\r\n        <div className=\"thumbnail-desc\">{name}</div>\r\n      </Link>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default Show;\r\n","export const BASE_URL = 'http://api.tvmaze.com';\r\nexport const TITLE = 'Popular TV Shows';\r\nexport const ERR_MSG = 'Oops.. An error occured.';\r\nexport const NO_SHOWS = 'No Shows Found';\r\nexport const SITE_DESCRIPTION = 'Welcome to Popular TV Shows. Here you can find your favourite TV shows';\r\nexport const SEE_MORE = 'See More';\r\nexport const RATING = 'Rating: ';\r\nexport const COUNTRY = 'Country: ';\r\nexport const SHOW_TYPE = 'Show type: ';\r\nexport const GENRES = 'Genres: ';\r\nexport const SCHEDULE = 'Schedule: ';\r\nexport const OFFICIAL_SITE = 'Official Site: ';\r\nexport const NA = 'NA';","import React from \"react\";\r\nimport Show from \"../Show\";\r\nimport { Row, Badge } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dummyImage from \"../../assets/no-img-portrait-text.png\";\r\nimport { SEE_MORE } from \"../../constants\";\r\n\r\nfunction Genre({ type, shows }) {\r\n  let filteredShows;\r\n  let showList;\r\n  if (shows) {\r\n    filteredShows = shows.filter((show) => show.genres.includes(type));\r\n  }\r\n  if (filteredShows) {\r\n    filteredShows.sort((a, b) => b.rating.average - a.rating.average); // sorting the shows according to rating(descending)\r\n    showList = filteredShows\r\n      .map((show) => (\r\n        <Show\r\n          image={show.image ? show.image.medium : dummyImage}\r\n          name={show.name}\r\n          show={show}\r\n          key={`Show-${show.id}`}\r\n        />\r\n      ))\r\n      .slice(0, 6); // showing maximum 6 shows per genre in dashboard\r\n  }\r\n  const genrePath = {\r\n    pathname: `/genre/${type}`,\r\n    shows: filteredShows,\r\n    type,\r\n  };\r\n  return type ? (\r\n    <>\r\n      <h2>\r\n        {type}\r\n        {filteredShows.length > 6 ? ( // removing see more if shows less than or equal to 6\r\n          <Link to={genrePath}>\r\n            <Badge pill variant=\"dark\" style={{ float: \"right\" }}>\r\n              {SEE_MORE}\r\n            </Badge>\r\n          </Link>\r\n        ) : null}\r\n      </h2>\r\n      <Row>{showList}</Row>\r\n    </>\r\n  ) : null;\r\n}\r\n\r\nexport default Genre;\r\n","import axios from \"axios\";\r\nimport { BASE_URL } from \"../constants\";\r\n\r\nexport const fetchShow = (id) => {\r\n  return axios.get(`${BASE_URL}/shows/${id}`);\r\n};\r\n\r\nexport const fetchAllShows = () => {\r\n  return axios.get(`${BASE_URL}/shows`);\r\n};\r\n\r\nexport const searchShows = (value) => {\r\n  return axios.get(`${BASE_URL}/search/shows?q=${value}`);\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport Genre from \"../../Components/Genre/Index\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { fetchAllShows, searchShows } from \"../../services\";\r\nimport { TITLE, NO_SHOWS, ERR_MSG, SITE_DESCRIPTION } from \"../../constants\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    shows: null,\r\n    searchValue: \"\",\r\n    error: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAllShows();\r\n  }\r\n\r\n  // getGenres will get all the unique genres available\r\n  getGenres = () => {\r\n    const { shows } = this.state;\r\n    let genres = new Set();\r\n    if (shows) {\r\n      shows.forEach((show) => {\r\n        genres.add(...show.genres);\r\n      });\r\n    }\r\n    return [...genres];\r\n  };\r\n\r\n  // searchApi method searches for the shows with search value given and sets them in the state\r\n  searchApi = (value) => {\r\n    if (value !== \"\") {\r\n      searchShows(value)\r\n        .then((res) => {\r\n          const resultArray = res.data.map((showData) => showData.show);\r\n          this.setState({ shows: resultArray, error: false });\r\n        })\r\n        .catch(() => this.setState({ error: true }));\r\n    } else {\r\n      this.getAllShows();\r\n    }\r\n  };\r\n\r\n  // getAllShows method fetches all the available shows in the API\r\n  getAllShows = () => {\r\n    fetchAllShows()\r\n      .then((res) => this.setState({ shows: res.data, error: false }))\r\n      .catch(() => this.setState({ error: true }));\r\n  };\r\n\r\n  // inputSearch method sets searchValue in state and calls searchApi method with input value of the user\r\n  inputSearch = (e) => {\r\n    e.preventDefault();\r\n    const searchValue = e.target.value;\r\n    this.setState((state) => ({ ...state, searchValue }));\r\n    this.searchApi(searchValue);\r\n  };\r\n\r\n  // submitHandler method calls searchApi with searchValue \r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const searchValue = this.state.searchValue;\r\n    this.searchApi(searchValue);\r\n  };\r\n\r\n  render() {\r\n    const { shows, searchValue, error } = this.state;\r\n    const genres = this.getGenres();\r\n    return (\r\n      <Container>\r\n        <div className=\"header\">\r\n          <h1>{TITLE}</h1>\r\n          <p className=\"desc\">{SITE_DESCRIPTION}</p>\r\n        </div>\r\n        <form onSubmit={this.submitHandler} className=\"middle\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"search\"\r\n            placeholder=\"Search..\"\r\n            value={searchValue}\r\n            onChange={this.inputSearch}\r\n            className=\"searchField\"\r\n          />\r\n        </form>\r\n        {genres.length > 0 ? (\r\n          genres.map((genre) => (\r\n            <Genre type={genre} shows={shows} key={`Genre-${genre}`} />\r\n          ))\r\n        ) : (\r\n          <h2>{error ? ERR_MSG : NO_SHOWS}</h2>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\r\nimport Show from \"../../Components/Show\";\r\nimport { Row, Button, Container, Spinner } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { fetchAllShows } from \"../../services\";\r\nimport dummyImage from \"../../assets/no-img-portrait-text.png\";\r\n\r\nclass GenreShows extends Component {\r\n  state = {\r\n    back: false,\r\n    shows: this.props.location.shows,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { shows } = this.state;\r\n    const type = this.props.match.params.id;\r\n    if (!shows) {\r\n      fetchAllShows()\r\n        .then((res) => {\r\n          const filteredShows = res.data.filter((show) =>\r\n            show.genres.includes(type)\r\n          );\r\n          filteredShows.sort((a, b) => b.rating.average - a.rating.average);\r\n          this.setState({ shows: filteredShows });\r\n        })\r\n        .catch(() => this.setState({ error: true }));\r\n    }\r\n  }\r\n\r\n  // onBack method returns the user to previous page\r\n  onBack = () => {\r\n    this.setState({ back: true });\r\n  };\r\n\r\n  render() {\r\n    const { shows, back } = this.state;\r\n    const { match } = this.props;\r\n    return shows ? (\r\n      <Container>\r\n        <h1>{match.params.id}</h1>\r\n        <Row>\r\n          {shows.map((show) => (\r\n            <Show\r\n              image={show.image ? show.image.medium : dummyImage}\r\n              name={show.name}\r\n              show={show}\r\n              key={`Show-${show.id}`}\r\n            />\r\n          ))}\r\n        </Row>\r\n        <Button variant=\"dark\" onClick={this.onBack}>\r\n          Back\r\n        </Button>\r\n        {back ? <Redirect to=\"/\" /> : null}\r\n      </Container>\r\n    ) : (\r\n      <Spinner className=\"spinner\" animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenreShows;\r\n","import React from \"react\";\r\nimport {\r\n  RATING,\r\n  COUNTRY,\r\n  SHOW_TYPE,\r\n  GENRES,\r\n  SCHEDULE,\r\n  OFFICIAL_SITE,\r\n  NA,\r\n} from \"../../constants\";\r\n\r\nfunction InfoCard({ show }) {\r\n  const { time, days } = show.schedule || { time: NA, days: [NA] };\r\n  return (\r\n    <div className=\"infoCard\">\r\n      <div>\r\n        <strong>{RATING}</strong>\r\n        <span>{show.rating.average || NA}</span>\r\n      </div>\r\n      <div>\r\n        <strong>{COUNTRY}</strong>\r\n        <span>{show.network ? show.network.country.name : NA}</span>\r\n      </div>\r\n      <div>\r\n        <strong>{SHOW_TYPE}</strong>\r\n        <span>{show.type || NA}</span>\r\n      </div>\r\n      <div>\r\n        <strong>{GENRES}</strong>\r\n        <span>{show.genres ? show.genres.join(\", \") : NA}</span>\r\n      </div>\r\n      <div>\r\n        <strong>{SCHEDULE}</strong>\r\n        <span>\r\n          {days.join(\", \")} at {time || NA} ({show.runtime || NA} mins)\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <strong>{OFFICIAL_SITE}</strong>\r\n        <span>\r\n          <a href={show.officialSite} target=\"blank\">\r\n            {show.officialSite || NA}\r\n          </a>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoCard;\r\n","import React, { Component } from \"react\";\r\nimport { Col, Container, Row, Spinner } from \"react-bootstrap\";\r\nimport InnerHtml from \"dangerously-set-html-content\";\r\nimport dummyImage from \"../../assets/no-img-portrait-text.png\";\r\nimport InfoCard from \"../../Components/InfoCard\";\r\nimport { fetchShow } from \"../../services\";\r\n\r\nclass ShowInfo extends Component {\r\n  state = {\r\n    show: this.props.location.show,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { show } = this.state;\r\n    const id = this.props.match.params.id;\r\n    if (!show) {\r\n      fetchShow(id)\r\n        .then((res) => this.setState({ show: res.data }))\r\n        .catch(() => this.setState({ error: true }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.state;\r\n    return show ? (\r\n      <Container>\r\n        <Row>\r\n          <Col sm={12} md={8} lg={8} xl={8}>\r\n            <h2>{show.name}</h2>\r\n            <img\r\n              className=\"infoImage\"\r\n              src={show.image ? show.image.medium : dummyImage}\r\n              alt={show.name}\r\n            />\r\n            <InnerHtml html={show.summary} />\r\n          </Col>\r\n          <Col sm={12} md={4} lg={4} xl={4}>\r\n            <InfoCard show={show} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    ) : (\r\n      <Spinner className=\"spinner\" animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowInfo;\r\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport Dashboard from './Container/Dashboard/index';\nimport GenreShows from './Container/GenreShows';\nimport ShowInfo from './Container/ShowInfo';\n\nclass App extends Component {\n\n  render() {\n    return (\n      < Switch >\n        <Route path=\"/genre/:id\" exact component={GenreShows} />\n        <Route path=\"/show/:id\" exact component={ShowInfo} />\n        <Route path=\"/\" exact component={Dashboard} />\n      </Switch >\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}